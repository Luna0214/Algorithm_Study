# 두 정수 사이의 합
# 문제 설명
# 두 정수 a, b가 주어졌을 때 a와 b 사이에 속한 모든 정수의 합을 리턴하는 함수, solution을 완성하세요.
# 예를 들어 a = 3, b = 5인 경우, 3 + 4 + 5 = 12이므로 12를 리턴합니다.

# 제한 조건
# a와 b가 같은 경우는 둘 중 아무 수나 리턴하세요.
# a와 b는 -10,000,000 이상 10,000,000 이하인 정수입니다.
# a와 b의 대소관계는 정해져있지 않습니다.

# ----------------------------------------------------------------------------------------------

def solution(a, b):
    if a < b:
        answer = sum(range(a, b +1))
    elif a > b:
        answer = sum(range(a, b -1, -1))
    else:
        answer = a
    return answer
# ----------------------------------------------------------------------------------------------

# 수박수박수박수박수박수?
# 문제 설명
# 길이가 n이고, "수박수박수박수...."와 같은 패턴을 유지하는 문자열을 리턴하는 함수, solution을 완성하세요. 예를들어 n이 4이면 "수박수박"을 리턴하고 3이라면 "수박수"를 리턴하면 됩니다.

# 제한 조건
# n은 길이 10,000이하인 자연수입니다.

# ----------------------------------------------------------------------------------------------
def solution(n):
    answer = ''
    for i in range(n):
        if i % 2 == 0:
            answer += "수"
        else:
            answer += "박"
    return answer
  
# ----------------------------------------------------------------------------------------------

# 서울에서 김서방 찾기
# 문제 설명
# String형 배열 seoul의 element중 "Kim"의 위치 x를 찾아, "김서방은 x에 있다"는 String을 반환하는 함수, solution을 완성하세요. seoul에 "Kim"은 오직 한 번만 나타나며 잘못된 값이 입력되는 경우는 없습니다.

# 제한 사항
# seoul은 길이 1 이상, 1000 이하인 배열입니다.
# seoul의 원소는 길이 1 이상, 20 이하인 문자열입니다.
# "Kim"은 반드시 seoul 안에 포함되어 있습니다.

# ----------------------------------------------------------------------------------------------

def solution(seoul):
    x = seoul.index("Kim")
    answer = '김서방은 {}에 있다'.format(x)
    return answer
  
# ----------------------------------------------------------------------------------------------

# 약수의 합
# 문제 설명
# 정수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, solution을 완성해주세요.

# 제한 사항
# n은 0 이상 3000이하인 정수입니다.

# ----------------------------------------------------------------------------------------------

def solution(n):
    answer = 0
    for i in range(1, n + 1):
        if n % i == 0:
            answer += i
    return answer
  
# ----------------------------------------------------------------------------------------------

# 문자열 내 p와 y의 개수
# 문제 설명
# 대문자와 소문자가 섞여있는 문자열 s가 주어집니다. s에 'p'의 개수와 'y'의 개수를 비교해 같으면 True, 다르면 False를 return 하는 solution를 완성하세요. 'p', 'y' 모두 하나도 없는 경우는 항상 True를 리턴합니다. 단, 개수를 비교할 때 대문자와 소문자는 구별하지 않습니다.

# 예를 들어 s가 "pPoooyY"면 true를 return하고 "Pyy"라면 false를 return합니다.

# 제한사항
# 문자열 s의 길이 : 50 이하의 자연수
# 문자열 s는 알파벳으로만 이루어져 있습니다.
  
# ----------------------------------------------------------------------------------------------

s = input()

def solution(s):
    s = [s.lower]
    if s.count("p") == s.count("y"):
        answer = True
    else:
        answer = False
    return answer


solution(s)

# ----------------------------------------------------------------------------------------------

# 같은 숫자는 싫어
# 문제 설명
# 배열 arr가 주어집니다. 배열 arr의 각 원소는 숫자 0부터 9까지로 이루어져 있습니다. 이때, 배열 arr에서 연속적으로 나타나는 숫자는 하나만 남기고 전부 제거하려고 합니다. 단, 제거된 후 남은 수들을 반환할 때는 배열 arr의 원소들의 순서를 유지해야 합니다. 예를 들면,

# arr = [1, 1, 3, 3, 0, 1, 1] 이면 [1, 3, 0, 1] 을 return 합니다.
# arr = [4, 4, 4, 3, 3] 이면 [4, 3] 을 return 합니다.
# 배열 arr에서 연속적으로 나타나는 숫자는 제거하고 남은 수들을 return 하는 solution 함수를 완성해 주세요.

# 제한사항
# 배열 arr의 크기 : 1,000,000 이하의 자연수
# 배열 arr의 원소의 크기 : 0보다 크거나 같고 9보다 작거나 같은 정수

# ----------------------------------------------------------------------------------------------

def solution(arr):
    answer = []
    for i in range(len(arr)):
        if arr[i] != arr[i-1]:
            answer.append(arr[i])
        elif i == 0:
            answer.append(arr[i])
    return answer

# ----------------------------------------------------------------------------------------------

# 가운데 글자 가져오기
# 문제 설명
# 단어 s의 가운데 글자를 반환하는 함수, solution을 만들어 보세요. 단어의 길이가 짝수라면 가운데 두글자를 반환하면 됩니다.

# 제한사항
# s는 길이가 1 이상, 100이하인 스트링입니다.

# ----------------------------------------------------------------------------------------------

def solution(s):
    answer = ""
    mid = int(len(s)/2)
    if len(s) % 2 == 0:
        answer += str(s[mid-1])
        answer += str(s[mid])
    elif len(s) % 2 != 0:
        answer += str(s[mid])
    return answer

# ----------------------------------------------------------------------------------------------

# x만큼 간격이 있는 n개의 숫자
# 문제 설명
# 함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다. 다음 제한 조건을 보고, 조건을 만족하는 함수, solution을 완성해주세요.

# 제한 조건
# x는 -10000000 이상, 10000000 이하인 정수입니다.
# n은 1000 이하인 자연수입니다.

# ----------------------------------------------------------------------------------------------

def solution(x, n):
    answer = []
    for i in range(n):
        a = x * (i+1)
        answer.append(a)
    return answer

# ----------------------------------------------------------------------------------------------

# 직사각형 별찍기
# 문제 설명
# 이 문제에는 표준 입력으로 두 개의 정수 n과 m이 주어집니다.
# 별(*) 문자를 이용해 가로의 길이가 n, 세로의 길이가 m인 직사각형 형태를 출력해보세요.

# 제한 조건
# n과 m은 각각 1000 이하인 자연수입니다.

# ----------------------------------------------------------------------------------------------

a, b = map(int, input().strip().split(' '))
for i in range(b):
    print("*" * a)

# ----------------------------------------------------------------------------------------------

# 평균 구하기
# 문제 설명
# 정수를 담고 있는 배열 arr의 평균값을 return하는 함수, solution을 완성해보세요.

# 제한사항
# arr은 길이 1 이상, 100 이하인 배열입니다.
# arr의 원소는 -10,000 이상 10,000 이하인 정수입니다.

# ----------------------------------------------------------------------------------------------

def solution(arr):
    answer = 0
    for i in arr:
        answer += i
    return answer/len(arr)

# ----------------------------------------------------------------------------------------------















